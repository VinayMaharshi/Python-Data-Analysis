# -*- coding: utf-8 -*-
"""Press freedom.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CCED_l-391_bo0AIRFjffhcQosMSdvL9
"""

#Importing the required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#Importing the data
press = pd.read_excel('/content/drive/MyDrive/Computers/Python/Datasets for data analysis/Media Freedom/Press Freedom Index.xlsx')

"""# **Data Cleaning**"""

#Getting the head of the data
press.head()

#Getting the shape of the data
press.shape

#Getting the info about the dataset
press.info()

#Checking if there any nulls in the dataset
press.isnull().sum()
#There are 2 nulls values in the zone column. But Zone is an unwanted column that we will drop.

#Checking if there are any duplicate values
press.duplicated().sum()
#There are no duplicate values as well

#Deleting unwanted columns
press = press.drop(['Zone'],axis = 1)

#checking if it got deleted
press.head()

"""# **Data Analysis**"""

#Top 10 countries as of 2023
top_10_countries_2023 = press[press['Year'] ==2023].sort_values(by = "Rank"). head(10)
print(top_10_countries_2023[['Country','Rank','Score']])

#Countries with least Press Freedom
bottom_10_countries_2023 = press[press['Year'] == 2023].sort_values(by = 'Rank',ascending = False).head(10)
print(bottom_10_countries_2023[['Country','Rank','Score']])

#Top 10 countires for 2022
top_10_countries_2022 = press[press['Year'] == 2022].sort_values(by = "Rank"). head(10)
print(top_10_countries_2022[['Country','Rank','Score']])

#Bottom 10 for 2022
bottom_10_countries_2022 = press[press['Year'] == 2022].sort_values(by = 'Rank',ascending = False).head(10)
print(bottom_10_countries_2022[['Country','Rank','Score']])

#Top 10 for 2021
top_10_countries_2021 = press[press['Year'] == 2021].sort_values(by = "Rank"). head(10)
print(top_10_countries_2021[['Country','Rank','Score']])

#Bottom 10 for 2021
bottom_10_countries_2021 = press[press['Year'] == 2021].sort_values(by = 'Rank',ascending = False).head(10)
print(bottom_10_countries_2021[['Country','Rank','Score']])

#Plotting the ranks for India, China, Pakistan, Bangladesh and SriLanka
countries = ['India', 'Pakistan', 'China', 'Sri Lanka', 'Bangladesh']
years = [2021,2022,2023]
scores = {}

for year in years:
    scores[year] = {}
    for country in countries:
        country_data = press[(press['Country'] == country) & (press['Year'] == year)]
        scores[year][country] = country_data['Score'].values[0]

#Created an empty dictionary and filled the key and values using for loop.

# Create a color map
colors = plt.cm.get_cmap('viridis', len(countries))

fig, ax = plt.subplots(figsize=(15,8))

# Total width for all bars at one x location
total_width = 0.8
# Width of a single bar
individual_width = total_width / len(countries)
# This list will hold the offset for each country
offsets = [-total_width / 2 + individual_width * i for i in range(len(countries))]

for i, country in enumerate(countries):
    country_scores = [scores[year][country] for year in years]
    # Apply offset to each country's bars
    bars = ax.bar(np.arange(len(years)) + offsets[i], country_scores,
           width=individual_width, color=colors(i/float(len(countries))), label=country)

    # Add scores on top of the bars
    for bar in bars:
        yval = bar.get_height()
        ax.text(bar.get_x() + bar.get_width()/6.0, yval, round(yval, 2), va='bottom')

# Adding labels
ax.set_ylabel('Scores')
ax.set_title("India and it's neighbours")
ax.set_xticks(np.arange(len(years)))
ax.set_xticklabels(years)
ax.legend()

# Display the figure
plt.show()

#Tracking the rank of India over years
india_rank = press[press['Country'] == 'India'].sort_values(by = 'Year')['Rank']
india_years = press['Year'].unique()
print(india_years)
print(india_rank)

india_rank = press[press['Country'] == 'India'].sort_values(by = 'Year')['Rank']
india_years = press['Year'].unique()

# Create the bar chart
plt.figure(figsize=(12, 8))
bars = plt.bar(india_years, india_rank)

# Add data labels on top of each bar
for bar in bars:
    yval = bar.get_height()
    plt.text(bar.get_x() + bar.get_width() / 2, yval + 0.2, yval, ha='center', va='bottom')

# Add title and labels
plt.title('India: Press Freedom Rank Over Years')
plt.xlabel('Year')
plt.ylabel('Rank')
plt.xticks(india_years)

# Show the chart
plt.show()

#Comparing the values of India and China
comp_country = ['India','China']
comp_years = [2019,2020,2021,2022,2023]
score = {}

for year in comp_years:
    score[year]= {}
    for country in comp_country:
        data_country = press[(press['Country'] == country) & (press['Year'] == year)]
        score[year][country] = data_country['Score'].values[0]
#Plotting  a graph
plt.figure(figsize=(12,8))
years = list(score.keys())
india_scores = [score[year]['India'] for year in years]
china_scores = [score[year]['China'] for year in years]

plt.bar(years,india_scores,label = 'India',width = 0.4, align = 'center')
plt.bar([year + 0.4 for year in years], china_scores, label='China', width=0.4)

#labels
plt.xticks(years)
plt.title("India vs China (higher score = better rank)")
plt.xlabel('Year')
plt.ylabel('Score')
plt.legend()
plt.show()